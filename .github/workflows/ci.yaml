name: ci

on:
  push:
    branches:
      - "feat/**"
      - "refactor/**"
      - "fix/**"
      - "main"
    paths:
      - "action.yaml"
      - ".github/**"
  pull_request:
    branches:
      - "main"
    paths:
      - "action.yaml"
      - ".github/**"
  workflow_call:

permissions: write-all

jobs:
  test-with-version:
    runs-on: ubuntu-latest
    env:
      VERSION: "v0.1.0"

    steps:
      - uses: actions/checkout@v4

      - name: Run Action
        uses: ./
        with:
          awslim-version: ${{ env.VERSION }}

      - name: Assert Installation
        run: type awslim

      - name: Assert Version
        run: |
          INSTALLED=$(awslim --version)
          echo $INSTALLED
          if [[ "$INSTALLED" =~ "HEAD" ]]; then
            exit 0
          fi
          exit 1

  test-with-gen-yaml:
    runs-on: ubuntu-latest
    env:
      GEN_YAML: ".github/test-gen.yaml"

    steps:
      - uses: actions/checkout@v4

      - name: Run Action
        uses: ./
        with:
          gen-yaml-path: ${{ env.GEN_YAML }}

      - name: Assert Installation
        run: type awslim

      - name: Assert Generated Services
        run: |
          GENERATED=$(awslim | tr -d '\n')
          echo $GENERATED
          if [[ "$GENERATED" == "s3" ]]; then
            exit 0
          fi
          exit 1

  test-with-client-go-gen:
    runs-on: ubuntu-latest
    env:
      CLIENT_GO_GEN: "s3"

    steps:
      - uses: actions/checkout@v4

      - name: Run Action
        uses: ./
        with:
          awslim-gen: ${{ env.CLIENT_GO_GEN }}

      - name: Assert Installation
        run: type awslim

      - name: Assert Generated Services
        run: |
          GENERATED=$(awslim | tr -d '\n')
          echo $GENERATED
          if [[ "$GENERATED" == "s3" ]]; then
            exit 0
          fi
          exit 1

  test-gen-yaml-inline:
    runs-on: ubuntu-latest
    env:
      GEN_YAML: ".github/test-gen.yaml"

    steps:
      - uses: actions/checkout@v4

      - name: Run Action
        uses: ./
        with:
          gen-yaml-inline: |
            services:
              - s3:
                - GetObject
                - PutObject
              - sqs:

      - name: Assert Installation
        run: type awslim

      - name: Assert Generated Services
        run: |
          GENERATED=$(awslim)
          echo $GENERATED
          if [[ ! "$GENERATED" =~ "s3" ]]; then
            exit 1
          fi
          if [[ ! "$GENERATED" =~ "sqs" ]]; then
            exit 1
          fi

      - name: Assert Generated Method
        run: |
          GENERATED=$(awslim s3)
          echo $GENERATED
          if [[ ! "$GENERATED" =~ "GetObject" ]]; then
            exit 1
          fi
          if [[ ! "$GENERATED" =~ "PutObject" ]]; then
            exit 1
          fi

  test-go-version:
    runs-on: ubuntu-latest
    env:
      GO_VERSION: "1.21.1"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run Action
        uses: ./

      - name: Assert Installation
        run: type awslim

      - name: Assert Go Version
        run: |
          GO_VERSION=$(go version)
          echo $GO_VERSION
          if [[ "$GO_VERSION" =~ ${{ env.GO_VERSION }} ]]; then
            exit 0
          fi
          exit 1

  compatibility:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Run Action
        uses: ./

      - name: Assert Installation
        if: ${{ runner.os != 'Windows'}}
        run: type awslim

      - name: Assert Installation(Windows with Bash)
        if: ${{ runner.os == 'Windows'}}
        run: type awslim
        shell: bash

      - name: Check Installation(Windows with PowerShell)
        id: check-installation-runs-on-pwsh
        continue-on-error: true
        if: ${{ runner.os == 'Windows'}}
        run: |
          awslim
          echo "find=$?" >> $GITHUB_OUTPUT

      - name: Assert Installation(Windows with PowerShell)
        if: ${{ runner.os == 'Windows' && steps.check-installation-runs-on-pwsh.outputs.find == 'False' }}
        run: exit 1

